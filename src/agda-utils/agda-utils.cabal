cabal-version:       >=1.10

name:                agda-utils
version:             0.1.0.0
-- synopsis:
-- description:
-- bug-reports:
-- license:
build-type:          Simple

flag cpphs
  default:     False
  manual:      True
  description: Use cpphs instead of cpp.

flag debug
  default: False
  manual: True
  description:
    Enable debugging features that may slow Agda down.

flag enable-cluster-counting
  default: False
  description:
    Enable the --count-clusters flag. (If enable-cluster-counting is
    False, then the --count-clusters flag triggers an error message.)

library
  hs-source-dirs: src
  build-depends:  array >= 0.5.1.1 && < 0.6
                , base >= 4.9.0.0 && < 4.15
                , binary >= 0.8.3.0 && < 0.9
                , boxes >= 0.1.3 && < 0.2
                , bytestring >= 0.10.8.1 && < 0.11
                , containers >= 0.5.7.1 && < 0.7
                , data-hash >= 0.2.0.0 && < 0.3
                , deepseq >= 1.4.2.0 && < 1.5
                , directory >= 1.2.6.2 && < 1.4
                , equivalence >= 0.3.2 && < 0.4
                -- exceptions-0.8 instead of 0.10 because of stack
                , exceptions >= 0.8 && < 0.11
                , filepath >= 1.4.1.0 && < 1.5
                , hashable >= 1.2.1.0 && < 1.4
                , hashtables >= 1.2.0.2 && < 1.3
                , ieee754 >= 0.7.8 && < 0.9
                , mtl >= 2.2.1 && < 2.3
                , murmur-hash >= 0.1 && < 0.2
                , pretty >= 1.1.3.3 && < 1.2
                , strict >= 0.3.2 && < 0.4
                , time >= 1.6.0.1 && < 1.10
                , unordered-containers >= 0.2.5.0 && < 0.3

  if impl(ghc >= 8.6.4) && impl(ghc < 8.10.2)
    build-depends: transformers == 0.5.6.2

  if impl(ghc >= 8.4) && impl(ghc < 8.6.4)
    build-depends: transformers == 0.5.5.0

  -- ASR (2018-10-16). Required for supporting GHC 8.4.1, 8.4.2 and
  -- 8.4.3. See Issue #3277.
  if impl(ghc >= 8.4.1) && impl(ghc <= 8.4.3)
    build-depends: text >= 1.2.3.0 && < 1.3
  else
    build-depends: text >= 1.2.3.1 && < 1.3

  if impl(ghc < 8.4)
    build-depends: transformers == 0.5.2.0

  if flag(cpphs)
    -- We don't write an upper bound for cpphs because the
    -- `build-tools` field can not be modified in Hackage.

    -- If your change the lower bound of cpphs also change it in the
    -- `.travis.yml` file [Issue #2315].
    build-tools: cpphs >= 1.20.8
    ghc-options: -pgmP cpphs -optP --cpp

  if flag(debug)
    cpp-options:    -DDEBUG

  if flag(enable-cluster-counting)
    cpp-options:    -DCOUNT_CLUSTERS
    build-depends:  text-icu == 0.7.*

  if os(windows)
    build-depends:  Win32 >= 2.3.1.1 && < 2.7

  -- Agda cannot be built with GHC 8.6.1 due to a compiler bug, see
  -- Agda Issue #3344.
  if impl(ghc == 8.6.1)
    buildable: False

  -- Agda cannot be built with Windows and GHC 8.6.3 due to a compiler
  -- bug, see Agda Issue #3657.
  if os(windows) && impl(ghc == 8.6.3)
    buildable: False

  exposed-modules:
                    Agda.Interaction.Library.Base
                    Agda.Interaction.Library.Parse
                    Agda.Interaction.Options.Help
                    Agda.Interaction.Options.IORefs
                    Agda.Interaction.Options.Warnings
                    Agda.Utils.AffineHole
                    Agda.Utils.Applicative
                    Agda.Utils.AssocList
                    Agda.Utils.Bag
                    Agda.Utils.Benchmark
                    Agda.Utils.BiMap
                    Agda.Utils.Cluster
                    Agda.Utils.Empty
                    Agda.Utils.Environment
                    Agda.Utils.Except
                    Agda.Utils.Either
                    Agda.Utils.Fail
                    Agda.Utils.Favorites
                    Agda.Utils.FileName
                    Agda.Utils.Float
                    Agda.Utils.Functor
                    Agda.Utils.Function
                    Agda.Utils.Graph.AdjacencyMap.Unidirectional
                    Agda.Utils.Graph.TopSort
                    Agda.Utils.Hash
                    Agda.Utils.Haskell.Syntax
                    Agda.Utils.Impossible
                    Agda.Utils.IndexedList
                    Agda.Utils.IntSet.Infinite
                    Agda.Utils.IO
                    Agda.Utils.IO.Binary
                    Agda.Utils.IO.Directory
                    Agda.Utils.IO.TempFile
                    Agda.Utils.IO.UTF8
                    Agda.Utils.IORef
                    Agda.Utils.Lens
                    Agda.Utils.Lens.Examples
                    Agda.Utils.List
                    Agda.Utils.ListT
                    Agda.Utils.Map
                    Agda.Utils.Maybe
                    Agda.Utils.Maybe.Strict
                    Agda.Utils.Memo
                    Agda.Utils.Monad
                    Agda.Utils.Monoid
                    Agda.Utils.Null
                    Agda.Utils.Parser.MemoisedCPS
                    Agda.Utils.PartialOrd
                    Agda.Utils.Pointer
                    Agda.Utils.POMonoid
                    Agda.Utils.Pretty
                    Agda.Utils.SemiRing
                    Agda.Utils.Singleton
                    Agda.Utils.Size
                    Agda.Utils.String
                    Agda.Utils.Suffix
                    Agda.Utils.Three
                    Agda.Utils.Time
                    Agda.Utils.Trie
                    Agda.Utils.Tuple
                    Agda.Utils.TypeLevel
                    Agda.Utils.TypeLits
                    Agda.Utils.Update
                    Agda.Utils.VarSet
                    Agda.Utils.Warshall
                    Agda.Utils.WithDefault
                    Agda.Utils.Zipper

  ghc-options: -fexpose-all-unfoldings
               -fspecialise-aggressively
               -- Initially, we disable all the warnings.
               -w
               -Werror
               -- This option must be the first one after disabling the
               -- warnings. See Issue #2094.
               -Wunrecognised-warning-flags
               -Wdeprecated-flags
               -Wderiving-typeable
               -Wdodgy-exports
               -Wdodgy-foreign-imports
               -Wdodgy-imports
               -Wduplicate-exports
               -Wempty-enumerations
               -Whi-shadowing
               -Widentities
               -Wincomplete-patterns
               -Winline-rule-shadowing
               -Wmissing-fields
               -Wmissing-methods
               -Wmissing-pattern-synonym-signatures
               -Wmissing-signatures
               -Wnoncanonical-monad-instances
               -Wnoncanonical-monoid-instances
               -Woverflowed-literals
               -Woverlapping-patterns
               -Wsemigroup
               -Wtabs
               -Wtyped-holes
               -Wunrecognised-pragmas
               -Wunticked-promoted-constructors
               -Wunused-do-bind
               -Wunused-foralls
               -Wwarnings-deprecations
               -Wwrong-do-bind

  -- NOTE: If adding flags, also add to `.ghci820`
  if impl(ghc >= 8.2)
    ghc-options: -Wcpp-undef
                 -- ASR TODO (2017-07-23): `make haddock` fails when
                 -- this flag is on.
                 -- -Wmissing-home-modules
                 -Wsimplifiable-class-constraints
                 -Wunbanged-strict-patterns

  -- NOTE: If adding flags, also add to `.ghci860`
  if impl(ghc >= 8.6)
    ghc-options: -Wimplicit-kind-vars
                 -Winaccessible-code
                 -Wstar-binder
                 -Wstar-is-type

  ghc-prof-options: -fprof-auto

  default-language: Haskell2010

  default-extensions: ConstraintKinds
                    , DefaultSignatures
                    , DeriveFoldable
                    , DeriveFunctor
                    , DeriveTraversable
                    , ExistentialQuantification
                    , FlexibleContexts
                    , FlexibleInstances
                    , FunctionalDependencies
                    , LambdaCase
                    , MultiParamTypeClasses
                    , MultiWayIf
                    , NamedFieldPuns
                    , OverloadedStrings
                    , RankNTypes
                    , RecordWildCards
                    , ScopedTypeVariables
                    , StandaloneDeriving
                    , TupleSections
                    , TypeSynonymInstances

