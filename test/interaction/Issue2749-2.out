(agda2-status-action "")
(agda2-info-action "*Type-checking*" "" nil)
(agda2-highlight-clear)
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?0 : .A → .A ?1 : .A → .A ?2 : B " nil)
((last . 1) . (agda2-goals-action '(0 1 2)))
(agda2-give-action 0 "λ x → ?")
(agda2-status-action "")
(agda2-info-action "*All Goals*" "?1 : .A → .A ?2 : B ?3 : .A " nil)
((last . 1) . (agda2-goals-action '(3 1 2)))
(agda2-status-action "ShowImplicit")
((last . 1) . (agda2-goals-action '(3 1 2)))
((last . 2) . (agda2-make-case-action '("it {A} ⦃ a ⦄ x = ?")))
((last . 1) . (agda2-goals-action '(3 1 2)))
(agda2-status-action "")
((last . 1) . (agda2-goals-action '(3 1 2)))
((last . 2) . (agda2-make-case-action '("left (mkB b₁ b₂) = ?")))
((last . 1) . (agda2-goals-action '(3 1 2)))
