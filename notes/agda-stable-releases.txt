When releasing a stable version of Agda, the following procedure can
be followed:

* First, release a release candidate (see
  notes/agda-stable-releases-candidates).

* Use the branch used for releasing the release candidate.

* Finish the CHANGELOG.

* Run the `closed-issues` program for adding the closed issues to the
  CHANGELOG excluding issues labelled with:

  not-in-changelog,
  status: abandoned,
  status: duplicated,
  status: invalid,
  status: wontfix,
  status: working-as-intended or

* Update the README.md, if necessary.

* Update the LICENSE file, if necessary.

* Update Stackage resolvers, if necessary.

* Verify that the Travis builds have no errors.

* Update in the bug tracker the milestone field of open issues to the
  next Agda version.

* Get a clean Agda repository.

    MAJORVERSION=<current-development-version-eg-2.4.2>
    VERSION=<current-released-version-eg-2.4.0.2>
    git clone git@github.com:agda/agda.git agda-release
    cd agda-release
    git checkout master

* Change the release candidate version to $MAJORVERSION in:

    .ghci
    Agda.cabal
    default.nix
    /doc/user-manual/conf.py (twice)
    mk/versions.mk
    src/data/emacs-mode/agda2-mode.el
    src/data/emacs-mode/agda2-mode-pkg.el
    src/size-solver/size-solver.cabal
    test/interaction/Issue1244a.out
    test/interaction/Issue1244b.out

* Obtain and install the standard library branch related to the Agda
  bugfix version:

    make up-to-date-std-lib

* Add a second source-repository section to Agda.cabal:

    source-repository this
      type:     git
      location: https://github.com/agda/agda.git
      tag:      v$MAJORVERSION

* Remove -Werror and -fprof-auto from Agda.cabal (this is required by
  `cabal --check`).

* Run the test-suite:

    make install
    make test

  Note that "make install" invokes "agda-mode compile", which should
  ensure that the Emacs mode can be compiled without errors or
  warnings (except for the "cl package required at runtime" warning).

* Remove the Cabal test-suite from Agda.cabal.

* Update the user manual:

    make user-manual-pdf

* Build source distributions:

    cabal configure
    cabal check
    cabal sdist

* Build documentation for uploading to Hackage. Adapted from
  https://hackage.haskell.org/upload (2018-05-19):

    cabal haddock --for-hackage --haddock-option=--hyperlinked-source

* Ensure that the package builds properly (with multiple versions of GHC if
  possible) in Linux, MacOS X and Windows.

    BASE=`pwd`
    cd ${TMPDIR:-/tmp}
    tar xzf $BASE/dist/Agda-$MAJORVERSION.tar.gz
    cd Agda-$MAJORVERSION
    cabal install

  Do not forget to test the Emacs mode.

* Tag the relase (do not forget to record the changes above first):

    cd $BASE
    git tag -a v$MAJORVERSION -m "Agda $MAJORVERSION stable release"

* Upload the tarball and the documentation to Hackage (tested with
  cabal-install >= 2.0.0.0):

    cd $BASE
    cabal upload dist/Agda-$MAJORVERSION.tar.gz
    cabal upload -d dist/Agda-$MAJORVERSION-docs.tar.gz

* Restore the Cabal tests-suites `agda-tests` and `internal-tests`
  from Agda.cabal.

* Restore -Werror and -fprof-auto in Agda.cabal.

* Remove the "this" source-repository section from the Cabal
  file. (This would be unnecessary if we had two repositories, one
  stable and one for development.)

* Push all changes (in the release-$MAJORVERSION branch):

    git push --follow-tags

* Add a new header to CHANGELOG.

* Close in the bug tracker the milestone $MAJORVERSION.

* Update Agda Manual on Readthedocs.org (see Issues #2844 and #3035)

  ** You need Admin permissions on the Agda readthedocs.org project
     (current admins: asr, andreasabel, phile314)

  ** Go to readthedocs.org -> Agda Project -> Admin -> Versions

  ** Mark $MAJORVERSION as active

  ** Set the default documentation version to $MAJORVERSION

  ** If a release candidate was released then remove the associated
     documentation.

* Update the Agda Wiki:

  ** Update the Download page:

     *** Move the current version information to the old releases
         section.

     *** Update the last release information.

  ** Update the Main page.

* Announce the release of the new version on the Agda mailing lists
  (users and developers).

* Enable the released version of Agda on Stackage, if necessary.
